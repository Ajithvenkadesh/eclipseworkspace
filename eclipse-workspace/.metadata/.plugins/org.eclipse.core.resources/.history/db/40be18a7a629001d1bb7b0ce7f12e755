import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.dbcp.BasicDataSource;

public class AssigneeDao {

	public Connection getConnection() {
		try {			
		   /* BasicDataSource dataSource = new BasicDataSource();
            Class.forName("org.postgresql.Driver");
            dataSource.setDriverClassName("org.postgresql.Driver");
            dataSource.setUrl("jdbc:postgresql://localhost/sql");
            dataSource.setUsername("postgres");
            dataSource.setPassword("123");
            dataSource.setMinIdle(5);
            dataSource.setMaxIdle(10);
            return dataSource.getConnection();*/
			final String url = "jdbc:postgresql://localhost/sql";
			final String password = "123";
			final String user = "postgres";
			return DriverManager.getConnection(url, user, password);
        } catch (Exception exception) {}
		return null;
	}
	
	public int save(final Assignee assignee) {
		final Connection connection = getConnection();
		
		try (PreparedStatement statement = connection.prepareStatement
				("insert into assignee(assignee_name, role) values (?,?)")) {
			statement.setString(1, assignee.getAssigneName());
			statement.setString(2, assignee.getRole());

			return statement.executeUpdate();			
		} catch (Exception exception) {
			System.out.println(exception.getMessage());
		}
		return 0;
	}

	public int update(Assignee assignee) {
		final Connection connection = AssigneeDao.getConnection();
		
		try (PreparedStatement statement = connection.prepareStatement
				("update assignee set assignee_name=?, role=? where assignee_id=?")) {
			statement.setString(1, assignee.getAssigneName());
			statement.setString(2, assignee.getRole());
			statement.setInt(3, assignee.getAssigneeId());

			return statement.executeUpdate();			
		} catch (Exception ex) {
			System.out.println(ex.getMessage());
		}

		return 0;
	}

	public int delete(int id) {
		int status = 0;
		try {
			Connection con = AssigneeDao.getConnection();
			PreparedStatement ps = con.prepareStatement("delete from assignee where assignee_id=?");
			ps.setInt(1, id);
			status = ps.executeUpdate();

			con.close();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		return status;
	}

	public Assignee getEmployeeById(int id) {
		Assignee e = new Assignee();

		try {
			Connection con = AssigneeDao.getConnection();
			PreparedStatement ps = con.prepareStatement("select * from assignee where assignee_id=?");
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();
			if (rs.next()) {
				e.setAssigneeId(id);
				e.setAssigneeName(rs.getString(2));
				e.setRole(rs.getString(3));
			}
			con.close();
		} catch (Exception ex) {
			System.out.println(ex.getMessage());
		}

		return e;
	}

	public List<Assignee> getAllEmployees() {
		List<Assignee> list = new ArrayList<Assignee>();

		try {
			Connection con = AssigneeDao.getConnection();
			PreparedStatement ps = con.prepareStatement("select * from users");
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				Assignee e = new Assignee();
				e.setAssigneeId(rs.getInt(1));
				e.setAssigneeName(rs.getString(2));
				e.setRole(rs.getString(3));
				list.add(e);
			}
			con.close();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		return list;
	}
}
